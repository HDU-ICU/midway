<!DOCTYPE html>
<html>
	<head>
		<title>
		{{- if .CanGoUp}}
			Index of {{html .Name}} - 杭州电子大学开源软件镜像站
		{{- else }}
			杭州电子大学开源软件镜像站
		{{- end }}
		</title>
		<link rel="canonical" href="{{.Path}}/"  />
		<meta charset="utf-8">
		<meta name="color-scheme" content="light dark">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
<style>
* { padding: 0; margin: 0; box-sizing: border-box; }

body {
	font-family: Inter, system-ui, sans-serif;
	font-size: 16px;
	text-rendering: optimizespeed;
	background-color: #f3f6f7;
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	min-height: 100vh;
	width: 100%;
}

img,
svg {
	vertical-align: middle;
	z-index: 1;
}

img {
	max-width: 100%;
	max-height: 100%;
	border-radius: 5px;
}

td img {
	max-width: 1.5em;
	max-height: 2em;
	object-fit: cover;
}

body,
a,
svg,
.layout.current,
.layout.current svg,
.go-up {
	color: #333;
	text-decoration: none;
}

.wrapper {
	max-width: 1200px;
	width: 100%;
	margin-left: auto;
	margin-right: auto;
}

header,
.meta {
	padding-left: 5%;
	padding-right: 5%;
}

td a {
	color: #006ed3;
	text-decoration: none;
}

td a:hover {
	color: #0095e4;
}


th:first-child,
td:first-child {
	width: 5%;
}

th:last-child,
td:last-child {
	width: 5%;
}

.status,
.size,
.timestamp {
	font-size: 14px;
}


.breadcrumbs {
	text-transform: uppercase;
	font-size: 10px;
	letter-spacing: 1px;
	color: #939393;
	margin-bottom: 5px;
	padding-left: 3px;
}

h1 {
	font-size: 20px;
	font-family: Poppins, system-ui, sans-serif;
	font-weight: normal;
	white-space: nowrap;
	overflow-x: hidden;
	text-overflow: ellipsis;
	color: #c5c5c5;
}

h1 a,
th a {
	color: #000;
}

h1 a {
	padding: 0 3px;
	margin: 0 1px;
}

h1 a:hover {
	background: #ffffc4;
}

h1 a:first-child {
	margin: 0;
}

main {
	background-color: white;
}

main {
	margin: 3em auto 0;
	box-shadow: 0 2px 5px 1px rgb(0 0 0 / 20%);
}

.status-green {
	background: #00800060;
}

.status-red {
	background: #ff000060;
}

.status-yellow {
	background: #ffff0060;
}

.status > span {
	padding: 5px;
}

.meta {
	display: flex;
	gap: 1em;
	font-size: 14px;
	border-bottom: 1px solid #e5e9ea;
	padding-top: 1em;
	padding-bottom: 1em;
	justify-content: space-between;
}

#summary {
	display: flex;
	gap: 1em;
	align-items: center;
}

.filter-container {
	position: relative;
	display: inline-block;
	margin-left: 1em;
}

#search-icon {
	color: #777;
	position: absolute;
	height: 1em;
	top: .6em;
	left: .5em;
}

#filter {
	padding: .5em 1em .5em 2.5em;
	border: none;
	border: 1px solid #CCC;
	border-radius: 5px;
	font-family: inherit;
	position: relative;
	z-index: 2;
	background: none;
}

.layout,
.layout svg {
	color: #9a9a9a;
}

table {
	width: 100%;
	border-collapse: collapse;
}

tbody tr,
tbody tr a,
.entry a {
	transition: all .15s;
}

tbody tr:hover,
.grid .entry a:hover {
	background-color: #f4f9fd;
}

th,
td {
	text-align: left;
}

th {
	position: sticky;
	top: 0;
	background: white;
	white-space: nowrap;
	z-index: 2;
	text-transform: uppercase;
	font-size: 14px;
	letter-spacing: 1px;
	padding: .75em 0;
}

td {
	white-space: nowrap;
}

td:nth-child(2) {
	width: 75%;
}

td:nth-child(2) a {
	padding: 1em 0;
	display: block;
}

td:nth-child(3),
th:nth-child(3) {
	padding: 0 20px 0 20px;
	min-width: 150px;
}

td:nth-child(4),
th:nth-child(4) {
	padding: 0 20px 0 20px;
	min-width: 150px;
}

td .go-up {
	text-transform: uppercase;
	font-size: 12px;
	font-weight: bold;
}

.name,
.go-up {
	word-break: break-all;
	overflow-wrap: break-word;
	white-space: pre-wrap;
}

.listing .icon-tabler {
	color: #454545;
}

.listing .icon-tabler-folder-filled {
	color: #ffb900 !important;
}

.sizebar {
	position: relative;
	padding: 0.25rem 0.5rem;
	display: flex;
}

.sizebar-bar {
	background-color: #dbeeff;
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: 0;
	height: 100%;
	pointer-events: none;
}

.sizebar-text {
	position: relative;
	z-index: 1;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

.grid {
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(16em, 1fr));
	gap: 2px;
}

.grid .entry {
	position: relative;
	width: 100%;
}

.grid .entry a {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	padding: 1.5em;
	height: 100%;
}

.grid .entry svg {
	width: 75px;
	height: 75px;
}

.grid .entry img {
	max-height: 200px;
	object-fit: cover;
}

.grid .entry .name {
	margin-top: 1em;
}

.footer {
	margin-top: 2em;
	padding: 1em;
	background: #104393;
	width: 100%;
	color: white;
	font-size: 1.1em;
	box-shadow: 0 -2px 5px 1px rgb(0 0 0 / 20%);
}

.caddy-logo {
	display: inline-block;
	height: 2.5em;
	margin: 0 auto;
}

@media (max-width: 800px) {
	.hideable {
		display: none;
	}

	td:nth-child(2) {
		width: auto;
	}

	th:nth-child(3),
	td:nth-child(3) {
		padding-right: 5%;
		text-align: right;
	}

	h1 {
		color: #000;
	}

	h1 a {
		margin: 0;
	}

	#filter {
		max-width: 100px;
	}

	.grid .entry {
		max-width: initial;
	}
}

.header {
	margin-top: 3em;
}

.header-title {
	font-size: 1.5em;
	font-weight: bold;
	color: #104393;
}

.meta-header-title {
	font-size: 1.2em;
	font-weight: bold;
}

.meta-header-path {
	font-size: 1.2em;
	font-weight: bold;
	color: #104393;
}


</style>
</head>
<body onload="initPage()">
		<div class="wrapper">
			<header class="header">
				<a href="/">
					<h1 class="header-title">HDU Mirror</h1>
					<h1 class="header-title">杭州电子科技大学开源软件镜像站</h1>
				</a>
			</header>
			<main>
				{{- if .CanGoUp}}
				<div class="meta">
					<div class="meta-header">
						<span class="meta-header-title">
							Index of 
						</span>
						{{range $i, $crumb := .Breadcrumbs}}
							<a class="meta-header-path" href="{{html $crumb.Link}}"><b>{{html $crumb.Text}}</b></a>
							{{if ne $i 0}}/{{end}}
						{{end}}
					</div>
					<div class="meta-summary" id="summary">
						<span class="meta-item">
							<b>{{.NumDirs}}</b> director{{if eq 1 .NumDirs}}y{{else}}ies{{end}}
						</span>
						<span class="meta-item">
							<b>{{.NumFiles}}</b> file{{if ne 1 .NumFiles}}s{{end}}
						</span>
						<span class="meta-item">
							<b>{{.HumanTotalFileSize}}</b> total 
						</span>
						{{- if ne 0 .Limit}}
						<span class="meta-item">
							(of which only <b>{{.Limit}}</b> are displayed)
						</span>
						{{- end}}
					</div>
				</div>
				<div class='listing{{if eq .Layout "grid"}} grid{{end}}'>
				<table aria-describedby="summary">
					<thead>
					<tr>
						<th></th>
						<th>
							{{- if and (eq .Sort "namedirfirst") (ne .Order "desc")}}
							<a href="?sort=namedirfirst&order=desc{{if ne 0 .Limit}}&limit={{.Limit}}{{end}}{{if ne 0 .Offset}}&offset={{.Offset}}{{end}}" class="icon">
								<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-caret-up" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
									<path stroke="none" d="M0 0h24v24H0z" fill="none"/>
									<path d="M18 14l-6 -6l-6 6h12"/>
								</svg>
							</a>
							{{- else if and (eq .Sort "namedirfirst") (ne .Order "asc")}}
							<a href="?sort=namedirfirst&order=asc{{if ne 0 .Limit}}&limit={{.Limit}}{{end}}{{if ne 0 .Offset}}&offset={{.Offset}}{{end}}" class="icon">
								<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-caret-down" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
									<path stroke="none" d="M0 0h24v24H0z" fill="none"/>
									<path d="M6 10l6 6l6 -6h-12"/>
								</svg>
							</a>
							{{- else}}
							<a href="?sort=namedirfirst&order=asc{{if ne 0 .Limit}}&limit={{.Limit}}{{end}}{{if ne 0 .Offset}}&offset={{.Offset}}{{end}}" class="icon sort">
								<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-caret-up" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
									<path stroke="none" d="M0 0h24v24H0z" fill="none"/>
									<path d="M18 14l-6 -6l-6 6h12"/>
								</svg>
							</a>
							{{- end}}
							
							{{- if and (eq .Sort "name") (ne .Order "desc")}}
							<a href="?sort=name&order=desc{{if ne 0 .Limit}}&limit={{.Limit}}{{end}}{{if ne 0 .Offset}}&offset={{.Offset}}{{end}}">
								Name
								<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-caret-up" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
									<path stroke="none" d="M0 0h24v24H0z" fill="none"/>
									<path d="M18 14l-6 -6l-6 6h12"/>
								</svg>
							</a>
							{{- else if and (eq .Sort "name") (ne .Order "asc")}}
							<a href="?sort=name&order=asc{{if ne 0 .Limit}}&limit={{.Limit}}{{end}}{{if ne 0 .Offset}}&offset={{.Offset}}{{end}}">
								Name
								<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-caret-down" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
									<path stroke="none" d="M0 0h24v24H0z" fill="none"/>
									<path d="M6 10l6 6l6 -6h-12"/>
								</svg>
							</a>
							{{- else}}
							<a href="?sort=name&order=asc{{if ne 0 .Limit}}&limit={{.Limit}}{{end}}{{if ne 0 .Offset}}&offset={{.Offset}}{{end}}">
								Name
							</a>
							{{- end}}

							<div class="filter-container">
								<svg id="search-icon" xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-search" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
									<path stroke="none" d="M0 0h24v24H0z" fill="none"/>
									<path d="M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0"/>
									<path d="M21 21l-6 -6"/>
								</svg>
								<input type="search" placeholder="Search" id="filter" onkeyup='filter()'>
							</div>
						</th>
						<th>
							{{- if and (eq .Sort "size") (ne .Order "desc")}}
							<a href="?sort=size&order=desc{{if ne 0 .Limit}}&limit={{.Limit}}{{end}}{{if ne 0 .Offset}}&offset={{.Offset}}{{end}}">
								Size
								<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-caret-up" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
									<path stroke="none" d="M0 0h24v24H0z" fill="none"/>
									<path d="M18 14l-6 -6l-6 6h12"/>
								</svg>
							</a>
							{{- else if and (eq .Sort "size") (ne .Order "asc")}}
							<a href="?sort=size&order=asc{{if ne 0 .Limit}}&limit={{.Limit}}{{end}}{{if ne 0 .Offset}}&offset={{.Offset}}{{end}}">
								Size
								<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-caret-down" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
									<path stroke="none" d="M0 0h24v24H0z" fill="none"/>
									<path d="M6 10l6 6l6 -6h-12"/>
								</svg>
							</a>
							{{- else}}
							<a href="?sort=size&order=asc{{if ne 0 .Limit}}&limit={{.Limit}}{{end}}{{if ne 0 .Offset}}&offset={{.Offset}}{{end}}">
								Size
							</a>
							{{- end}}
						</th>
						<th class="hideable">
							{{- if and (eq .Sort "time") (ne .Order "desc")}}
							<a href="?sort=time&order=desc{{if ne 0 .Limit}}&limit={{.Limit}}{{end}}{{if ne 0 .Offset}}&offset={{.Offset}}{{end}}">
								Modified
								<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-caret-up" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
									<path stroke="none" d="M0 0h24v24H0z" fill="none"/>
									<path d="M18 14l-6 -6l-6 6h12"/>
								</svg>
							</a>
							{{- else if and (eq .Sort "time") (ne .Order "asc")}}
							<a href="?sort=time&order=asc{{if ne 0 .Limit}}&limit={{.Limit}}{{end}}{{if ne 0 .Offset}}&offset={{.Offset}}{{end}}">
								Modified
								<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-caret-down" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
									<path stroke="none" d="M0 0h24v24H0z" fill="none"/>
									<path d="M6 10l6 6l6 -6h-12"/>
								</svg>
							</a>
							{{- else}}
							<a href="?sort=time&order=asc{{if ne 0 .Limit}}&limit={{.Limit}}{{end}}{{if ne 0 .Offset}}&offset={{.Offset}}{{end}}">
								Modified
							</a>
							{{- end}}
						</th>
						<th class="hideable"></th>
					</tr>
					</thead>
					<tbody>
					{{- if .CanGoUp}}
					<tr>
						<td></td>
						<td>
							<a href="..">
								<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-corner-left-up" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
									<path stroke="none" d="M0 0h24v24H0z" fill="none"/>
									<path d="M18 18h-6a3 3 0 0 1 -3 -3v-10l-4 4m8 0l-4 -4"/>
								</svg>
								<span class="go-up">Up</span>
							</a>
						</td>
						<td></td>
						<td class="hideable"></td>
						<td class="hideable"></td>
					</tr>
					{{- end}}
					{{- range .Items}}
					<tr class="file">
						<td></td>
						<td>
							<a href="{{html .URL}}">
								{{- if not .SymlinkPath}}
								<span class="name">{{html .Name}}</span>
								{{- else}}
								<span class="name">{{html .Name}} <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-arrow-narrow-right" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
									<path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M5 12l14 0" />
									<path d="M15 16l4 -4" />
									<path d="M15 8l4 4" />
								</svg> {{html .SymlinkPath}}</span>
								{{- end}}
							</a>
						</td>
						{{- if .IsDir}}
						<td>&mdash;</td>
						{{- else}}
						<td class="size" data-size="{{.Size}}">
							<div class="sizebar">
								<div class="sizebar-bar"></div>
								<div class="sizebar-text">
									{{.HumanSize}}
								</div>
							</div>
						</td>
						{{- end}}
						<td class="timestamp hideable">
							<time datetime="{{.HumanModTime "2006-01-02T15:04:05Z"}}">{{.HumanModTime "01/02/2006 03:04:05 PM +08:00"}}</time>
						</td>
						<td class="hideable"></td>
					</tr>
					{{- end}}
					</tbody>
				</table>
			</div>
			{{- else}}
				<div class="meta">
					<div class="meta-header">
						<span class="meta-header-title">
							镜像列表
						</span>
					</div>
				</div>
				<div class='listing{{if eq .Layout "grid"}} grid{{end}}'>
				<table aria-describedby="summary">
					<thead>
					<tr>
						<th></th>
						<th>
							Name
							<div class="filter-container">
								<svg id="search-icon" xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-search" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
									<path stroke="none" d="M0 0h24v24H0z" fill="none"/>
									<path d="M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0"/>
									<path d="M21 21l-6 -6"/>
								</svg>
								<input type="search" placeholder="Search" id="filter" onkeyup='filter()'>
							</div>
						</th>
						<th>
							Sync Status
						</th>
						<th class="hideable">
							Last Successful Sync
						</th>
						<th class="hideable">Help</th>
					</tr>
					</thead>
					<tbody>
					{{- range .Items}}
					{{- if .IsDir}}
					<tr class="file" id="mirror-{{.Name}}">
						<td></td>
						<td>
							<a href="{{html .URL}}">
								{{- if not .SymlinkPath}}
								<span class="name">{{html .Name}}</span>
								{{- else}}
								<span class="name">{{html .Name}} -› {{html .SymlinkPath}}</span>
								{{- end}}
							</a>
						</td>
						<td class="status">
							<span>Loading</span>
						</td>
						<td class="timestamp hideable">
							Loading
						</td>
						<td class="hideable">
							<a href="{{html .URL}}?site=help">
								?
							</a>
						</td>
					</tr>
					{{- end}}
					{{- end}}
					</tbody>
				</table>
			</div>
			{{- end}}
			</main>
		</div>
		<footer class="footer">
			<div class="wrapper">
				本站由杭州电子科技大学网络中心支持创办，由杭州电子科技大学网络与计算协会运行维护。<br/><br/>
				本站暂时只对校内服务。
			</div>
		</footer>

		<script>
			const filterEl = document.getElementById('filter');
			filterEl?.focus({ preventScroll: true });
			{{- if .CanGoUp}}
			const is_index = false;
			{{- else}}
			const is_index = true;
			{{- end}}

			function initPage() {
				// populate and evaluate filter
				if (!filterEl?.value) {
					const filterParam = new URL(window.location.href).searchParams.get('filter');
					if (filterParam) {
						filterEl.value = filterParam;
					}
				}
				filter();

				// fill in size bars
				let largest = 0;
				document.querySelectorAll('.size').forEach(el => {
					largest = Math.max(largest, Number(el.dataset.size));
				});
				document.querySelectorAll('.size').forEach(el => {
					const size = Number(el.dataset.size);
					const sizebar = el.querySelector('.sizebar-bar');
					if (sizebar) {
						sizebar.style.width = `${size/largest * 100}%`;
					}
				});
				if (is_index) {
					sync_status();
				}
			}

			function filter() {
				if (!filterEl) return;
				const q = filterEl.value.trim().toLowerCase();
				document.querySelectorAll('tr.file').forEach(function(el) {
					if (!q) {
						el.style.display = '';
						return;
					}
					const nameEl = el.querySelector('.name');
					const nameVal = nameEl.textContent.trim().toLowerCase();
					if (nameVal.indexOf(q) !== -1) {
						el.style.display = '';
					} else {
						el.style.display = 'none';
					}
				});
			}

			function queryParam(k, v) {
				const qs = new URLSearchParams(window.location.search);
				if (!v) {
					qs.delete(k);
				} else {
					qs.set(k, v);
				}
				const qsStr = qs.toString();
				if (qsStr) {
					window.location.search = qsStr;
				} else {
					window.location = window.location.pathname;
				}
			}

			function localizeDatetime(e, index, ar) {
				if (e.textContent === undefined) {
					return;
				}
				var d = new Date(e.getAttribute('datetime'));
				if (isNaN(d)) {
					d = new Date(e.textContent);
					if (isNaN(d)) {
						return;
					}
				}
				e.textContent = d.toLocaleString("zh-CN");
			}
			async function sync_status() {
				const request = new Request("/status.json");
				const response = await fetch(request)
				const data = await response.json();
				data.forEach((item) => {
					const element = document.getElementById("mirror-" + item.name + "/");
					const status_elem = element.getElementsByClassName("status")[0].getElementsByTagName("span")[0];
					const time_elem = element.getElementsByClassName("timestamp")[0];
					const d = new Date(item.time * 1000)
					status_elem.innerHTML = item.status;
					if( item.status == "synced" ) {
						status_elem.classList.add("status-green");
					}
					if( item.status == "syncing" ) {
						status_elem.classList.add("status-yellow");
					}
					if( item.status == "failed" ) {
						status_elem.classList.add("status-red");
					}
					time_elem.innerHTML = d.toLocaleString("zh-CN");
				});
			}
			var timeList = Array.prototype.slice.call(document.getElementsByTagName("time"));
			timeList.forEach(localizeDatetime);
		</script>
	</body>
</html>
